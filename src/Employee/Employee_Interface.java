package Employee;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Vayshalini
 */
public class Employee_Interface extends javax.swing.JFrame {

    public static int journeyid;

    public Employee_Interface() {

        initComponents();

        lbl_notfound.setVisible(false);
        lbl_novalues.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        heading_lbl = new javax.swing.JLabel();
        motto_lbl = new javax.swing.JLabel();
        logo_lbl = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_viewrecords = new javax.swing.JTable();
        manage_routes_ = new javax.swing.JInternalFrame();
        destination_placeupdt = new javax.swing.JTextField();
        departure_placeupdt = new javax.swing.JTextField();
        duration_comboupdt = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        itinerary_boxupdt = new javax.swing.JTextArea();
        capacity_spnupdt = new javax.swing.JSpinner();
        tourtype_comboupdt = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnadd_updt = new javax.swing.JButton();
        btnclear_updt = new javax.swing.JButton();
        details_btn = new javax.swing.JButton();
        price_comboupdt = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        txt_pkgIDupdt = new javax.swing.JTextField();
        deptime_comboupdt = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        add_newpkgs = new javax.swing.JInternalFrame();
        destination_place = new javax.swing.JTextField();
        departure_place = new javax.swing.JTextField();
        duration_combo = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        itinerary_box = new javax.swing.JTextArea();
        capacity_spn = new javax.swing.JSpinner();
        tourtype_combo = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        btnadd1 = new javax.swing.JButton();
        btnclear1 = new javax.swing.JButton();
        price_combo = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        txt_pkgIDadd = new javax.swing.JTextField();
        deptime_combo = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        type_search = new javax.swing.JTextField();
        combo_searchby = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        combo_duration = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        viewall_btn = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        price_combosrch = new javax.swing.JComboBox<>();
        srch_btnall = new javax.swing.JButton();
        deptime_combosrch = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        lbl_novalues = new javax.swing.JLabel();
        lbl_notfound = new javax.swing.JLabel();
        backgroundl_lbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Employee Operate Panel");
        setName("Employee Operate Panel"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1800, 850));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        heading_lbl.setFont(new java.awt.Font("Buxton Sketch", 1, 62)); // NOI18N
        heading_lbl.setForeground(new java.awt.Color(255, 255, 255));
        heading_lbl.setText("Europe Bus");
        getContentPane().add(heading_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 320, 80));

        motto_lbl.setFont(new java.awt.Font("Goudy Old Style", 1, 18)); // NOI18N
        motto_lbl.setForeground(new java.awt.Color(204, 255, 204));
        motto_lbl.setText("A tour to be remembered . . .");
        getContentPane().add(motto_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, 220, 40));

        logo_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/logo5resize2.jpg"))); // NOI18N
        getContentPane().add(logo_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 80, 80));

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        tbl_viewrecords.setAutoCreateRowSorter(true);
        tbl_viewrecords.setBackground(new java.awt.Color(192, 234, 255));
        tbl_viewrecords.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        tbl_viewrecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "PackageID", "Departure Country & Town", "Destination Country & Town", "Duration", "Tour Type", "Departure Time", "Journey Price (SL Rs.)", "Capacity", "Itinerary"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbl_viewrecords.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbl_viewrecords.setRowHeight(30);
        tbl_viewrecords.setRowMargin(5);
        tbl_viewrecords.setSelectionBackground(new java.awt.Color(240, 240, 240));
        tbl_viewrecords.setSelectionForeground(new java.awt.Color(0, 0, 0));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tbl_viewrecords, org.jdesktop.beansbinding.ELProperty.create("${border}"), tbl_viewrecords, org.jdesktop.beansbinding.BeanProperty.create("border"));
        bindingGroup.addBinding(binding);

        jScrollPane2.setViewportView(tbl_viewrecords);
        if (tbl_viewrecords.getColumnModel().getColumnCount() > 0) {
            tbl_viewrecords.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbl_viewrecords.getColumnModel().getColumn(1).setResizable(false);
            tbl_viewrecords.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbl_viewrecords.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbl_viewrecords.getColumnModel().getColumn(3).setPreferredWidth(120);
            tbl_viewrecords.getColumnModel().getColumn(4).setPreferredWidth(80);
            tbl_viewrecords.getColumnModel().getColumn(5).setPreferredWidth(90);
            tbl_viewrecords.getColumnModel().getColumn(6).setPreferredWidth(90);
            tbl_viewrecords.getColumnModel().getColumn(7).setPreferredWidth(50);
            tbl_viewrecords.getColumnModel().getColumn(8).setPreferredWidth(200);
        }

        jTabbedPane1.addTab("View all Routes", new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/viewrecordsag.png")), jScrollPane2); // NOI18N

        manage_routes_.setVisible(true);
        manage_routes_.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        destination_placeupdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destination_placeupdtActionPerformed(evt);
            }
        });
        manage_routes_.getContentPane().add(destination_placeupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, 240, 40));

        departure_placeupdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departure_placeupdtActionPerformed(evt);
            }
        });
        manage_routes_.getContentPane().add(departure_placeupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 240, 40));

        duration_comboupdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 Days", "5 Days", "6 Days", "7 Days", "10 Days", "12 Days", "15 Days", "21 Days" }));
        manage_routes_.getContentPane().add(duration_comboupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 200, 40));

        itinerary_boxupdt.setColumns(20);
        itinerary_boxupdt.setRows(5);
        jScrollPane1.setViewportView(itinerary_boxupdt);

        manage_routes_.getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 400, 320, 180));

        capacity_spnupdt.setModel(new javax.swing.SpinnerNumberModel(25, 10, 50, 1));
        manage_routes_.getContentPane().add(capacity_spnupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, 140, 40));

        tourtype_comboupdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bus/Coach" }));
        manage_routes_.getContentPane().add(tourtype_comboupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 220, 180, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Journey Price (Rs.)");
        manage_routes_.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 300, 200, 40));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Departure Country & Town");
        manage_routes_.getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 240, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Destination Country & Town");
        manage_routes_.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 140, 240, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Departure Time");
        manage_routes_.getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 200, 60));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Capacity");
        manage_routes_.getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 420, 200, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Itinerary");
        manage_routes_.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, 200, 40));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Package ID");
        manage_routes_.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 200, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Tour Type");
        manage_routes_.getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 220, 200, 40));

        btnadd_updt.setBackground(new java.awt.Color(204, 255, 204));
        btnadd_updt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnadd_updt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/addicon22ag.png"))); // NOI18N
        btnadd_updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd_updtActionPerformed(evt);
            }
        });
        manage_routes_.getContentPane().add(btnadd_updt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 20, 40, 40));

        btnclear_updt.setBackground(new java.awt.Color(255, 204, 204));
        btnclear_updt.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnclear_updt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/claeralladdg.png"))); // NOI18N
        btnclear_updt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclear_updtActionPerformed(evt);
            }
        });
        manage_routes_.getContentPane().add(btnclear_updt, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 20, 40, 40));

        details_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/viewrecordsiconag2.png"))); // NOI18N
        details_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                details_btnActionPerformed(evt);
            }
        });
        manage_routes_.getContentPane().add(details_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 20, 40, 40));

        price_comboupdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rs. 10560", "Rs. 14560", "Rs. 19560", "Rs. 21560", "Rs. 28560", "Rs. 30560", "Rs. 35560", "Rs. 50560", " " }));
        manage_routes_.getContentPane().add(price_comboupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 300, 180, 40));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel21.setText("Duration");
        manage_routes_.getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 200, 40));
        manage_routes_.getContentPane().add(txt_pkgIDupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 240, 40));

        deptime_comboupdt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "29/02/2020", "01/03/2020", "07/03/2020", "15/03/2020", "22/03/2020", "28/03/2020", "05/04/2020", "12/04/2020", "19/04/2020", "03/05/2020", "09/05/2020", "17/05/2020", "23/05/2020", "30/05/2020", "07/06/2020", "14/06/2020", "20/06/2020", "28/06/2020", "05/07/2020", "12/07/2020", "19/07/2020", " " }));
        manage_routes_.getContentPane().add(deptime_comboupdt, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 200, 40));

        jLabel10.setBackground(new java.awt.Color(102, 102, 102));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/efil_tower12.jpg"))); // NOI18N
        manage_routes_.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1120, 760));

        jTabbedPane1.addTab("Manage Routes", new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/manageicon2ag.png")), manage_routes_); // NOI18N

        add_newpkgs.setVisible(true);
        add_newpkgs.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        destination_place.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destination_placeActionPerformed(evt);
            }
        });
        add_newpkgs.getContentPane().add(destination_place, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 140, 240, 40));

        departure_place.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                departure_placeActionPerformed(evt);
            }
        });
        add_newpkgs.getContentPane().add(departure_place, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, 240, 40));

        duration_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3 Days", "5 Days", "6 Days", "7 Days", "10 Days", "12 Days", "15 Days", "21 Days" }));
        add_newpkgs.getContentPane().add(duration_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 240, 200, 40));

        itinerary_box.setColumns(20);
        itinerary_box.setRows(5);
        jScrollPane3.setViewportView(itinerary_box);

        add_newpkgs.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 320, 180));

        capacity_spn.setModel(new javax.swing.SpinnerNumberModel(25, 10, 50, 1));
        add_newpkgs.getContentPane().add(capacity_spn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 440, 140, 40));

        tourtype_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bus/Coach" }));
        add_newpkgs.getContentPane().add(tourtype_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 240, 180, 40));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Journey Price (Rs.)");
        add_newpkgs.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 340, 200, 40));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Departure Country & Town");
        add_newpkgs.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 240, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Destination Country & Town");
        add_newpkgs.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 140, 240, 40));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Departure Time");
        add_newpkgs.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 200, 40));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Capacity");
        add_newpkgs.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 200, 40));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Itinerary");
        add_newpkgs.getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 440, 200, 40));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Package ID");
        add_newpkgs.getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 200, 40));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Tour Type");
        add_newpkgs.getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 240, 160, 40));

        btnadd1.setBackground(new java.awt.Color(204, 255, 204));
        btnadd1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnadd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/addicon22ag.png"))); // NOI18N
        btnadd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnadd1ActionPerformed(evt);
            }
        });
        add_newpkgs.getContentPane().add(btnadd1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 20, 40, 40));

        btnclear1.setBackground(new java.awt.Color(255, 204, 204));
        btnclear1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnclear1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/claeralladdg.png"))); // NOI18N
        btnclear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclear1ActionPerformed(evt);
            }
        });
        add_newpkgs.getContentPane().add(btnclear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 20, 40, 40));

        price_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rs. 10560", "Rs. 14560", "Rs. 19560", "Rs. 21560", "Rs. 28560", "Rs. 30560", "Rs. 35560", "Rs. 50560", " " }));
        add_newpkgs.getContentPane().add(price_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 340, 180, 40));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Duration");
        add_newpkgs.getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 200, 40));
        add_newpkgs.getContentPane().add(txt_pkgIDadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 40, 240, 40));

        deptime_combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "29/02/2020", "01/03/2020", "07/03/2020", "15/03/2020", "22/03/2020", "28/03/2020", "05/04/2020", "12/04/2020", "19/04/2020", "03/05/2020", "09/05/2020", "17/05/2020", "23/05/2020", "30/05/2020", "07/06/2020", "14/06/2020", "20/06/2020", "28/06/2020", "05/07/2020", "12/07/2020", "19/07/2020", " " }));
        add_newpkgs.getContentPane().add(deptime_combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, 200, 40));

        jLabel19.setBackground(new java.awt.Color(102, 102, 102));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/efil_towernight12.jpg"))); // NOI18N
        add_newpkgs.getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 1120, 760));

        jTabbedPane1.addTab("Add New Packages", new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/addnewag.png")), add_newpkgs); // NOI18N

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 1140, 800));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1240, 140, 20, 820));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Enter Departure city, Destination city, Capacity, Itinerary");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 520, 20));
        jPanel1.add(type_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 280, 40));

        combo_searchby.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Departure Country & City", "Destination Country & City", "Capacity", "Itinerary" }));
        jPanel1.add(combo_searchby, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, 220, 40));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 520, 20));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 520, 20));

        combo_duration.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~~Select Journey Duration~~", "3 Days", "5 Days", "6 Days", "7 Days", "10 Days", "12 Days", "15 Days", "21 Days" }));
        combo_duration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_durationActionPerformed(evt);
            }
        });
        jPanel1.add(combo_duration, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 600, 220, 40));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel20.setText("Search By");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, -1, 40));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel23.setText("Select Duration");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 600, -1, 40));

        viewall_btn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        viewall_btn.setText("VIEW ALL");
        viewall_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewall_btnActionPerformed(evt);
            }
        });
        jPanel1.add(viewall_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 720, 120, 60));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel26.setText("Select Price");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel27.setText("Select Date");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        price_combosrch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~~Select Price Range~~", "Rs. 10560", "Rs. 14560", "Rs. 19560", "Rs. 21560", "Rs. 28560", "Rs. 30560", "Rs. 35560", "Rs. 50560" }));
        price_combosrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price_combosrchActionPerformed(evt);
            }
        });
        jPanel1.add(price_combosrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 180, 40));

        srch_btnall.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        srch_btnall.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/searchiconag.png"))); // NOI18N
        srch_btnall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srch_btnallActionPerformed(evt);
            }
        });
        jPanel1.add(srch_btnall, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 160, 40, 40));

        deptime_combosrch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "~~Select The Date~~", "29/02/2020", "01/03/2020", "07/03/2020", "15/03/2020", "22/03/2020", "28/03/2020", "05/04/2020", "12/04/2020", "19/04/2020", "03/05/2020", "09/05/2020", "17/05/2020", "23/05/2020", "30/05/2020", "07/06/2020", "14/06/2020", "20/06/2020", "28/06/2020", "05/07/2020", "12/07/2020", "19/07/2020", " " }));
        deptime_combosrch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptime_combosrchActionPerformed(evt);
            }
        });
        jPanel1.add(deptime_combosrch, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 200, 40));

        jLabel22.setBackground(new java.awt.Color(217, 247, 247));
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/ishan-seefromthesky-JQGEj_ayWIg-unsplash.jpg"))); // NOI18N
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1280, -180, 1900, 1040));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1280, 140, 560, 820));

        lbl_novalues.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lbl_novalues.setForeground(new java.awt.Color(153, 0, 0));
        lbl_novalues.setText("No Values Entered");
        getContentPane().add(lbl_novalues, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, 180, 20));

        lbl_notfound.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        lbl_notfound.setForeground(new java.awt.Color(153, 0, 0));
        lbl_notfound.setText("Entered Records Couldn't Found");
        getContentPane().add(lbl_notfound, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, -1, -1));

        backgroundl_lbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images_Folder/full_back7www.jpg"))); // NOI18N
        getContentPane().add(backgroundl_lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1040));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void destination_placeupdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destination_placeupdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destination_placeupdtActionPerformed

    private void departure_placeupdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departure_placeupdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departure_placeupdtActionPerformed

    private void destination_placeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destination_placeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_destination_placeActionPerformed

    private void departure_placeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_departure_placeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_departure_placeActionPerformed

    private void details_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_details_btnActionPerformed
        int i = tbl_viewrecords.getSelectedRow();

        DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
        String packageid = dtm.getValueAt(i, 0).toString();
        String deptown = dtm.getValueAt(i, 1).toString();
        String destown = dtm.getValueAt(i, 2).toString();
        String duration = dtm.getValueAt(i, 3).toString();
        String tourtype = dtm.getValueAt(i, 4).toString();
        String deptime = dtm.getValueAt(i, 5).toString();
        String price = dtm.getValueAt(i, 6).toString();
        String capacity = dtm.getValueAt(i, 7).toString();
        String itinerary = dtm.getValueAt(i, 8).toString();
       

        fillUpdateFields(packageid, deptown, destown, duration, tourtype, deptime, price, capacity, itinerary);
    }//GEN-LAST:event_details_btnActionPerformed

    private void btnadd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd1ActionPerformed
        String packageid = txt_pkgIDadd.getText();
        String deptown = departure_place.getText();
        String destown = destination_place.getText();
        String duration = duration_combo.getSelectedItem().toString();
        String tourtype = tourtype_combo.getSelectedItem().toString();
        String jrnyprice = price_combo.getSelectedItem().toString();
        String deptime = deptime_combo.getSelectedItem().toString();
        int capacity = Integer.parseInt(capacity_spn.getValue().toString());
        String itinerary = itinerary_box.getText();

        if (packageid.equals("") && deptown.equals("") && destown.equals("") && itinerary.equals("")) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "No values entered",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            try {

                int insertcount = addNewPackage(packageid, deptown, destown, duration, tourtype, jrnyprice, deptime, capacity, itinerary);

                if (insertcount < 10) {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Package Added successfully",
                            "Success",
                            JOptionPane.PLAIN_MESSAGE);

                } else {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Save Package Failed",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);

                }

            } catch (SQLException ex) {
                Logger.getLogger(Employee_Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_btnadd1ActionPerformed

    private void btnclear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclear1ActionPerformed
        txt_pkgIDupdt.setText("");
        departure_place.setText("");
        destination_place.setText("");
        itinerary_box.setText("");
        deptime_combo.setSelectedIndex(0);
        price_combo.setSelectedIndex(0);
        tourtype_combo.setSelectedIndex(0);
        price_combo.setSelectedIndex(0);
        capacity_spn.setValue(25);

    }//GEN-LAST:event_btnclear1ActionPerformed

    private void viewall_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewall_btnActionPerformed
        try {
            Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();

            ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo");

            DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
            dtm.setRowCount(0);

            while (rstasks.next()) {
                journeyid = rstasks.getInt("idjourneyinfo");

                Vector<String> vecDate = new Vector<>();

                vecDate.add(rstasks.getString("PackageID"));
                vecDate.add(rstasks.getString("DepartureTown"));
                vecDate.add(rstasks.getString("DestinationTown"));
                vecDate.add(rstasks.getString("Duration"));
                vecDate.add(rstasks.getString("TourType"));
                vecDate.add(rstasks.getString("DepartureTime"));
                vecDate.add(rstasks.getString("JourneyPrice"));
                vecDate.add(rstasks.getString("Capacity"));
                vecDate.add(rstasks.getString("Itinerary"));

                dtm.addRow(vecDate);

                // lblsearch.setVisible(false);
                // lbltoday.setVisible(false);
            }

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_viewall_btnActionPerformed

    private void srch_btnallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srch_btnallActionPerformed
        String searchtext = type_search.getText();
        int selectedindex = combo_searchby.getSelectedIndex();

        if (selectedindex >= 0 && searchtext.equals("")) {
            lbl_novalues.setVisible(true);
             lbl_notfound.setVisible(false);
            
        }else if (selectedindex == 0) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();

                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where DepartureTown LIKE '%" + searchtext + "%'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);
                lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);

                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else if (selectedindex == 1) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();
                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where DestinationTown LIKE '%" + searchtext + "%'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);
                lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);

                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

        } else if (selectedindex == 2) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();
                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where Capacity LIKE '%" + searchtext + "%'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);
                lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);
                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

        } else if (selectedindex == 3 && !searchtext.equals("")) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();
                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where Itinerary LIKE '%" + searchtext + "%'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);

                lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);
                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
            
         
        } else {
            lbl_novalues.setVisible(false);
            lbl_notfound.setVisible(true);

        }

    }//GEN-LAST:event_srch_btnallActionPerformed

    private void deptime_combosrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptime_combosrchActionPerformed
        int selectedindex = deptime_combosrch.getSelectedIndex();
        String selectedType = deptime_combosrch.getSelectedItem().toString();

        if (selectedindex != 0) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();

                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where DepartureTime='" + selectedType + "'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);

                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                    lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

        } else {
            lbl_novalues.setVisible(false);
            lbl_notfound.setVisible(true);
        }
    }//GEN-LAST:event_deptime_combosrchActionPerformed

    private void price_combosrchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price_combosrchActionPerformed
          int selectedindex = price_combosrch.getSelectedIndex();
        String selectedType = price_combosrch.getSelectedItem().toString();

        if (selectedindex != 0) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();

                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where JourneyPrice='" + selectedType + "'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);

                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                    lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

        } else {
            lbl_novalues.setVisible(false);
            lbl_notfound.setVisible(true);
        }
    }//GEN-LAST:event_price_combosrchActionPerformed

    private void combo_durationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_durationActionPerformed
          int selectedindex = combo_duration.getSelectedIndex();
        String selectedType = combo_duration.getSelectedItem().toString();

        if (selectedindex != 0) {

            try {
                Connection con = DataBaseConnection.DataBaseConnectionClass.createDBConnection();

                ResultSet rstasks = con.createStatement().executeQuery("select * from journeyinfo where Duration='" + selectedType + "'");

                DefaultTableModel dtm = (DefaultTableModel) tbl_viewrecords.getModel();
                dtm.setRowCount(0);

                while (rstasks.next()) {
                    journeyid = rstasks.getInt("idjourneyinfo");

                    Vector<String> vecDate = new Vector<>();

                    vecDate.add(rstasks.getString("PackageID"));
                    vecDate.add(rstasks.getString("DepartureTown"));
                    vecDate.add(rstasks.getString("DestinationTown"));
                    vecDate.add(rstasks.getString("Duration"));
                    vecDate.add(rstasks.getString("TourType"));
                    vecDate.add(rstasks.getString("DepartureTime"));
                    vecDate.add(rstasks.getString("JourneyPrice"));
                    vecDate.add(rstasks.getString("Capacity"));
                    vecDate.add(rstasks.getString("Itinerary"));

                    dtm.addRow(vecDate);

                    lbl_notfound.setVisible(false);
                lbl_novalues.setVisible(false);
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

        } else {
            lbl_novalues.setVisible(false);
            lbl_notfound.setVisible(true);
        }
    }//GEN-LAST:event_combo_durationActionPerformed

    private void btnclear_updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclear_updtActionPerformed
        txt_pkgIDupdt.setText("");
        departure_placeupdt.setText("");
        destination_placeupdt.setText("");
        itinerary_boxupdt.setText("");
        deptime_comboupdt.setSelectedIndex(0);
        price_comboupdt.setSelectedIndex(0);
        tourtype_comboupdt.setSelectedIndex(0);
        price_comboupdt.setSelectedIndex(0);
        capacity_spnupdt.setValue(25);

    }//GEN-LAST:event_btnclear_updtActionPerformed

    private void btnadd_updtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnadd_updtActionPerformed
        String uppackageid = txt_pkgIDupdt.getText();
        String updeptown = departure_placeupdt.getText();
        String updestown = destination_placeupdt.getText();
        String upduration = duration_comboupdt.getSelectedItem().toString();
        String uptourtype = tourtype_comboupdt.getSelectedItem().toString();
        String upjrnyprice = price_comboupdt.getSelectedItem().toString();
        String updeptime = deptime_comboupdt.getSelectedItem().toString();
        int upcapacity = Integer.parseInt(capacity_spnupdt.getValue().toString());
        String upitinerary = itinerary_boxupdt.getText();

        if (uppackageid.equals("") && updeptown.equals(0) && updestown.equals(0) && upitinerary.equals(0)) {
            JOptionPane.showMessageDialog(
                    rootPane,
                    "No values entered",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);

        } else {

            try {
                
                int insertcount = updateRecords(uppackageid, updeptown, updestown, upduration, uptourtype, updeptime, upjrnyprice, upcapacity, upitinerary);

                if (insertcount < 10) {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Package Updated Successfully",
                            "Success",
                            JOptionPane.PLAIN_MESSAGE);

                } else { //if (insertcount < 3) {
                    JOptionPane.showMessageDialog(
                            rootPane,
                            "Update Package Failed",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);

                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_btnadd_updtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Employee_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Employee_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Employee_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Employee_Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Employee_Interface().setVisible(true);
            }
        });
    }

    
    private int addNewPackage(String packageid, String deptown, String destown, String duration, String tourtype, String jrnyprice, String deptime, int capacity, String itinerary) throws SQLException {
        try {
            Connection nwcon = DataBaseConnection.DataBaseConnectionClass.createDBConnection();           
            int recordcount = nwcon.createStatement().executeUpdate("insert into journeyinfo(PackageID,DepartureTown,DestinationTown,Duration,TourType,DepartureTime,JourneyPrice,Capacity,Itinerary,employeedetails_idemployeedetails) values('" + packageid + "','" + deptown + "','" + destown + "','" + duration + "','" + tourtype + "','" + deptime + "','" + jrnyprice + "','" + capacity + "','" + itinerary + "','" + Emplyee_aLogin.loggedUserID + "')");

            return recordcount;

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Couldn't input values! Retry",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    } 
    
    private void fillUpdateFields(String packageid, String deptown, String destown, String duration, String tourtype, String deptime, String price, String capacity, String itinerary) {

       txt_pkgIDupdt.setText(packageid);
       destination_placeupdt.setText(destown);
       departure_placeupdt.setText(deptown);
       itinerary_boxupdt.setText(itinerary);

        if (deptime.equalsIgnoreCase("29/02/2020")) {
            deptime_comboupdt.setSelectedIndex(1);
        } else if (deptime.equalsIgnoreCase("01/03/2020")) {
            deptime_comboupdt.setSelectedIndex(2);
        } else if (deptime.equalsIgnoreCase("07/03/2020")) {
            deptime_comboupdt.setSelectedIndex(3);
        } else if (deptime.equalsIgnoreCase("15/03/2020")) {
            deptime_comboupdt.setSelectedIndex(4);
        } else if (deptime.equalsIgnoreCase("22/03/2020")) {
            deptime_comboupdt.setSelectedIndex(5);
        } else if (deptime.equalsIgnoreCase("28/03/2020")) {
            deptime_comboupdt.setSelectedIndex(6);
        } else if (deptime.equalsIgnoreCase("05/04/2020")) {
            deptime_comboupdt.setSelectedIndex(7);
        } else if (deptime.equalsIgnoreCase("12/04/2020")) {
            deptime_comboupdt.setSelectedIndex(8);
        } else if (deptime.equalsIgnoreCase("19/04/2020")) {
            deptime_comboupdt.setSelectedIndex(9);
        } else if (deptime.equalsIgnoreCase("03/05/2020")) {
            deptime_comboupdt.setSelectedIndex(10);
        } else if (deptime.equalsIgnoreCase("09/05/2020")) {
            deptime_comboupdt.setSelectedIndex(11);
        } else if (deptime.equalsIgnoreCase("17/05/2020")) {
            deptime_comboupdt.setSelectedIndex(12);
        }else if (deptime.equalsIgnoreCase("23/05/2020")) {
            deptime_comboupdt.setSelectedIndex(13);
        }else if (deptime.equalsIgnoreCase("30/05/2020")) {
            deptime_comboupdt.setSelectedIndex(14);
        }else if (deptime.equalsIgnoreCase("07/06/2020")) {
            deptime_comboupdt.setSelectedIndex(15);
        }else if (deptime.equalsIgnoreCase("14/06/2020")) {
            deptime_comboupdt.setSelectedIndex(16);
        }else if (deptime.equalsIgnoreCase("20/06/2020")) {
            deptime_comboupdt.setSelectedIndex(17);
        }else if (deptime.equalsIgnoreCase("28/06/2020")) {
            deptime_comboupdt.setSelectedIndex(18);
        }else if (deptime.equalsIgnoreCase("05/07/2020")) {
            deptime_comboupdt.setSelectedIndex(19);
        }else if (deptime.equalsIgnoreCase("12/07/2020")) {
            deptime_comboupdt.setSelectedIndex(20);
        }else if (deptime.equalsIgnoreCase("19/07/2020")) {
            deptime_comboupdt.setSelectedIndex(21);
        }

        if (price.equalsIgnoreCase("Rs. 10560")) {
            price_comboupdt.setSelectedIndex(0);
        } else if (price.equalsIgnoreCase("Rs. 14560")) {
            price_comboupdt.setSelectedIndex(1);
        } else if (price.equalsIgnoreCase("Rs. 19560")) {
            price_comboupdt.setSelectedIndex(2);
        }else if (price.equalsIgnoreCase("Rs. 21560")) {
            price_comboupdt.setSelectedIndex(3);
        }else if (price.equalsIgnoreCase("Rs. 28560")) {
            price_comboupdt.setSelectedIndex(4);
        }else if (price.equalsIgnoreCase("Rs. 30560")) {
            price_comboupdt.setSelectedIndex(5);
        }else if (price.equalsIgnoreCase("Rs. 35560")) {
            price_comboupdt.setSelectedIndex(6);
        }else if (price.equalsIgnoreCase("Rs. 50560")) {
            price_comboupdt.setSelectedIndex(7);
        }
        
          if (duration.equalsIgnoreCase("3 Days")) {
            duration_comboupdt.setSelectedIndex(0);
        } else if (duration.equalsIgnoreCase("5 Days")) {
            duration_comboupdt.setSelectedIndex(1);
        } else if (duration.equalsIgnoreCase("6 Days")) {
            duration_comboupdt.setSelectedIndex(2);
        }else if (duration.equalsIgnoreCase("7 Days")) {
            duration_comboupdt.setSelectedIndex(3);
        }else if (duration.equalsIgnoreCase("10 Days")) {
            duration_comboupdt.setSelectedIndex(4);
        }else if (duration.equalsIgnoreCase("12 Days")) {
            duration_comboupdt.setSelectedIndex(5);
        }else if (duration.equalsIgnoreCase("15 Days")) {
            duration_comboupdt.setSelectedIndex(6);
        }else if (duration.equalsIgnoreCase("21 Days")) {
            duration_comboupdt.setSelectedIndex(7);
        }
          
          
        if (tourtype.equalsIgnoreCase("Bus/Coach")) {
            tourtype_comboupdt.setSelectedIndex(0);
        }
        
       SpinnerNumberModel spn = (SpinnerNumberModel) capacity_spnupdt.getModel();
        spn.setValue(Integer.parseInt(capacity));

    }
    
  
    private int updateRecords(String uppackageid, String updeptown, String updestown, String upduration, String uptourtype, String updeptime, String upjrnyprice, int upcapacity, String upitinerary) {
        try {
            Connection nwcon = DataBaseConnection.DataBaseConnectionClass.createDBConnection();
                                                                                               
            int recordcount = nwcon.createStatement().executeUpdate("update journeyinfo set PackageID='" + uppackageid + "', DepartureTown='" + updeptown + "', DestinationTown='" + updestown + "', Duration='" + upduration + "', TourType='" + uptourtype + "', DepartureTime='" + updeptime + "', JourneyPrice='" + upjrnyprice + "', Capacity='" + upcapacity + "', Itinerary='" + upitinerary + "' where idjourneyinfo='" + journeyid + "' ");
            return recordcount;

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(
                    rootPane,
                    "Couldn't update values! Retry",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame add_newpkgs;
    private javax.swing.JLabel backgroundl_lbl;
    private javax.swing.JButton btnadd1;
    private javax.swing.JButton btnadd_updt;
    private javax.swing.JButton btnclear1;
    private javax.swing.JButton btnclear_updt;
    private javax.swing.JSpinner capacity_spn;
    private javax.swing.JSpinner capacity_spnupdt;
    private javax.swing.JComboBox<String> combo_duration;
    private javax.swing.JComboBox<String> combo_searchby;
    private javax.swing.JTextField departure_place;
    private javax.swing.JTextField departure_placeupdt;
    private javax.swing.JComboBox<String> deptime_combo;
    private javax.swing.JComboBox<String> deptime_combosrch;
    private javax.swing.JComboBox<String> deptime_comboupdt;
    private javax.swing.JTextField destination_place;
    private javax.swing.JTextField destination_placeupdt;
    private javax.swing.JButton details_btn;
    private javax.swing.JComboBox<String> duration_combo;
    private javax.swing.JComboBox<String> duration_comboupdt;
    private javax.swing.JLabel heading_lbl;
    private javax.swing.JTextArea itinerary_box;
    private javax.swing.JTextArea itinerary_boxupdt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_notfound;
    private javax.swing.JLabel lbl_novalues;
    private javax.swing.JLabel logo_lbl;
    private javax.swing.JInternalFrame manage_routes_;
    private javax.swing.JLabel motto_lbl;
    private javax.swing.JComboBox<String> price_combo;
    private javax.swing.JComboBox<String> price_combosrch;
    private javax.swing.JComboBox<String> price_comboupdt;
    private javax.swing.JButton srch_btnall;
    private javax.swing.JTable tbl_viewrecords;
    private javax.swing.JComboBox<String> tourtype_combo;
    private javax.swing.JComboBox<String> tourtype_comboupdt;
    private javax.swing.JTextField txt_pkgIDadd;
    private javax.swing.JTextField txt_pkgIDupdt;
    private javax.swing.JTextField type_search;
    private javax.swing.JButton viewall_btn;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
